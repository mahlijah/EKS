curl -fsSL -o get_helm.sh https://raw.githubusercontent.com/helm/helm/master/scripts/get-helm-3

#create IAM OIDC Provider
eksctl utils associate-iam-oidc-provider --region us-east-1 --cluster k21ekscluster-22 --approve

#Downloadd IAM Policy for AWS Load Balancer Controller
curl -o iam_policy.json https://raw.githubusercontent.com/kubernetes-sigs/aws-loadbalancer-controller/v2.4.1/docs/install/iam_policy.json

#Create the IAM Policy
aws iam create-policy --policy-name AWSLoadBalancerControllerIAMPolicy --policy-document file://iam_policy.json
{
    "Policy": {
        "PolicyName": "AWSLoadBalancerControllerIAMPolicy",
        "PolicyId": "ANPATAKXFAK7PJIO7YKNT",
        "Arn": "arn:aws:iam::206878081726:policy/AWSLoadBalancerControllerIAMPolicy",
        "Path": "/",
        "DefaultVersionId": "v1",
        "AttachmentCount": 0,
        "PermissionsBoundaryUsageCount": 0,
        "IsAttachable": true,
        "CreateDate": "2023-04-12T01:33:38+00:00",
        "UpdateDate": "2023-04-12T01:33:38+00:00"
    }
}

#Create IAM Role and Service Account
 eksctl create iamserviceaccount \
 --cluster=k21ekscluster-22 \
 --namespace=kube-system \
 --name=aws-load-balancer-controller \
 --role-name "AmazonEKSLoadBalancerControllerRole" \
 --attach-policy-arn=arn:aws:iam::206878081726:policy/AWSLoadBalancerControllerIAMPolicy \
 --approve
 
 #Add Annotation to the Service Account
 kubectl annotate serviceaccount -n kube-system aws-load-balancer-controller eks.amazonaws.com/sts-regional-endpoints=true

 #Install TargetGroupBinding CRDs
 kubectl apply -k "github.com/aws/eks-charts/stable/aws-load-balancer-controller//crds?ref=master"
 
 #install the helm chart 
 helm upgrade -i aws-load-balancer-controller eks/aws-load-balancer-controller -n kube-system --set clusterName=k21ekscluster-22 --set serviceAccount.create=false --set serviceAccount.name=aws-load-balancer-controller
 
 #create a demo app to test the ingress controller 
  git clone https://github.com/k21academyuk/EKS-Ingress-Controller
  
 #Apply the yaml file to deploy the namespace, app, service, and Ingress 
 kubectl apply -f SampleApp.yaml
 
 #check the services that were just deployed with the yaml file
 kubectl get all -n game-2048
 
  kubectl get ingress/ingress-2048 -n game-2048 -o jsonpath='{.status.loadBalancer.ingress[0].hostname}'
  => k8s-game2048-ingress2-5c9f1506c0-225478132.us-east-1.elb.amazonaws.comubuntu@ip-172-31-81-82:~/Ingress/EKS-Ingress-Controller$ 
  
  Paste the dns in webbrowser to see the deployed application.
  
